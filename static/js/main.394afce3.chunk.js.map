{"version":3,"sources":["components/Home/Card.js","components/Home/Cards.js","assets/pokemonworld.png","assets/bg_generations.jpg","assets/bg_pokemons2.jpg","assets/bg_locations.png","components/Home/Home.js","components/styles.js","components/Pokedex/PokemonInfo.js","utils/stringtools.js","components/Locations/Location.card.info.js","components/ScrollableList/ScrollableList.js","components/Generations/Generation.card.info.js","components/Modal/Modal.js","components/Generations/Generation.card.js","components/Generations/Generation.cards.js","components/Pagination/Pagination.js","services/api.services.js","components/Title.js","components/SearchBar.js","assets/generations.png","components/Generations/Generations.js","components/Locations/Location.card.js","components/Locations/Location.cards.js","assets/title_locations.png","components/Locations/Locations.js","components/Pokedex/PokemonCard.js","components/Pokedex/PokemonCards.js","assets/pokedex.png","components/Pokedex/Pokedex.js","components/Footer/Footer.js","assets/pokeball.png","components/NavBar/NavBar.js","App.js","index.js"],"names":["Card","title","description","image","url","history","useHistory","className","src","alt","onClick","push","Cards","data","Grid","container","direction","justify","alignItems","spacing","map","card","item","style","display","width","id","Home","useState","bg_generations","bg_pokemon","bg_locations","cardsData","img_title","styled","div","SubCard","BoxTypes","Name","Id","Info","BasicInfo","Stat","StatLabel","StatBar","props","base_stat","pad","num","size","s","substr","length","PokemonInfo","pokemon","totalStats","name","sprites","front_default","types","type","habitat","weight","height","stats","filter","o","stat","firstToUpper","str","toUpperCase","substring","splitAndUpper","split_symbol","split","res","forEach","trim","LocationInfo","str_remove","location","region","areas","generation","game_indices","variant","CardHeader","subheader","CardContent","Typography","color","gutterBottom","Chip","icon","Map","label","area","ZoomOutMap","Timeline","replace","ScrollableList","listName","List","idx","ListItem","ListItemText","textAlign","primary","GenerationInfo","abilities","main_region","moves","pokemon_species","version_groups","Divider","orientation","flexItem","Modal","module","closeModal","e","stopPropagation","localeCompare","GenerationCard","openModal","setSelectedGeneration","GenerationCards","generations","Pagination","updatePage","totalPages","count","onChange","BASE_URL","searchItem","MODULE","item_name","a","URL","fetchItem","getItems","limit","offset","getItemByURL","fetch","json","console","log","Title","img","SearchBar","onSearch","search","setSearch","onPressEnter","code","key","preventDefault","toLowerCase","noValidate","autoComplete","TextField","fullWidth","onKeyPress","target","value","IconButton","fontSize","Generations","setGenerations","selected_generation","actualPage","setActualPage","setTotalPages","showModal","setShowModal","notFound","setNotFound","fetchGeneration","promises","results","pok","Promise","all","Math","ceil","generation_name","useEffect","page_","LocationCard","setSelectedLocation","LocationCards","locations","Locations","setLocations","selected_location","fetchLocation","location_name","useStyles","makeStyles","theme","root","details","flexDirection","content","flex","media","PokemonCard","setSelectedPokemon","cursor","PokemonCards","pokemons","Pokedex","show","setShow","setPokemons","selected_pokemon","pokemon_name","fetchPokemon","Footer","href","flexGrow","NavBar","classes","PATH_HOME","onChangesTab","page","AppBar","background","position","Toolbar","Button","bind","this","bar_logo","App","exact","path","to","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.394afce3.chunk.js","sourcesContent":["import React from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nimport './cards.css'\r\n\r\nfunction Card ({title,description,image,url})\r\n{\r\n    const history   = useHistory();\r\n    \r\n    const onClickHandler = ()=>{\r\n        history.push(url);\r\n    }\r\n\r\n    return (\r\n        <div className='card text-center bg-red animate__animated animate__fadeInUp c-card '>\r\n            \r\n            <div className=\"overflow\">\r\n            <img src={image} alt=\"\" className=\"card-img-top\"/>\r\n            </div>\r\n            <div className='card-body'>\r\n\r\n            \r\n                <a onClick={onClickHandler} className=\"btn\" >\r\n                <h4 className='card-title'>{title}</h4>\r\n                \r\n                <p className='card-text text-secondary'>{description}</p>\r\n                </a>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  Card;","import React from \"react\";\r\nimport Card from \"./Card\"\r\nimport {Grid} from '@material-ui/core'\r\n// className=\"container d-flex justify-content-center align-items-center\"\r\nfunction Cards({data}) {\r\n   \r\n    return (\r\n        <div className=\"container d-flex justify-content-center align-items-center\">\r\n            <Grid container direction=\"row\"\r\n                 justify=\"center\"\r\n                alignItems=\"stretch\"\r\n                spacing = {3}\r\n\r\n>\r\n            {\r\n            data.map((card)=> (\r\n                <Grid  item style={{display: 'flex',width:300}} key={card.id}>\r\n                    <Card title={card.title}\r\n                          image={card.image}\r\n                          description={card.description}\r\n                          url={card.url}\r\n                    />\r\n                  </Grid>\r\n                ))\r\n            }\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","export default __webpack_public_path__ + \"static/media/pokemonworld.cac6246f.png\";","export default __webpack_public_path__ + \"static/media/bg_generations.cf9f3830.jpg\";","export default __webpack_public_path__ + \"static/media/bg_pokemons2.f078e4e1.jpg\";","export default __webpack_public_path__ + \"static/media/bg_locations.d1679fe3.png\";","import React, {useState,useEffect} from 'react';\r\nimport Cards from './Cards'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nimport img_title from '../../assets/pokemonworld.png'\r\nimport bg_generations from '../../assets/bg_generations.jpg'\r\nimport bg_pokemon from '../../assets/bg_pokemons2.jpg'\r\nimport bg_locations from '../../assets/bg_locations.png'\r\n\r\nfunction Home ()\r\n{\r\n    const [cardsData,setCardsData] = useState([\r\n        {\r\n            id:1,\r\n            title:'Generations',\r\n            image:bg_generations,\r\n            description:'Watch and search Pokemon Generations .In each generation, a new set of Pokémon, Moves, Abilities and Types.',\r\n            url:'/generations'\r\n        },\r\n        {\r\n            id:2,\r\n            title:'Pokedex',\r\n            image:bg_pokemon,\r\n            description:'Watch and search detailed information about the creatures that inhabit the world of the Pokémon games.',\r\n            url:'/pokedex'\r\n        },\r\n        {\r\n            id:3,\r\n            title:'Locations',\r\n            image:bg_locations,\r\n            description:'Check out the Locations that can be visited within the games. Locations make up sizable portions of regions, like cities or routes.',\r\n            url:'/locations'\r\n        },\r\n    ]) \r\n    \r\n    return (<div>\r\n        <br></br>\r\n        <div className=\"container center-item  \" >\r\n        <img  src={img_title} className=\"title-flex\" alt=\"\"/>\r\n        </div>\r\n        <br></br>\r\n        \r\n        <div >\r\n        <Cards data={cardsData}></Cards>\r\n        </div>\r\n    </div>\r\n        \r\n    )\r\n}\r\nexport default Home;","import styled from 'styled-components';\r\n\r\n\r\nexport const Card = styled.div`\r\n  width: 500px;\r\n  height: 600px;\r\n  display: grid;\r\n  flex-direction: column;\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 50%;\r\n  -webkit-transform: translate(-50%, -50%);\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\nexport const SubCard = styled.div`\r\n  border-radius: 10px;\r\n  box-shadow: 2px 2px 10px -4px rgba(0, 0, 0, 0.25);\r\n  background: #f1f1f1;\r\n  min-height: 360px;\r\n  padding: 15px;\r\n  position: absolute;\r\n  width: 100%;\r\n  margin-top: 100px;\r\n  padding-top: 15px;\r\n`;\r\n\r\nexport const BoxTypes = styled.div`\r\n  position: absolute;\r\n  top: 5px;\r\n  right: 0;\r\n  max-width: 100px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-end;\r\n`;\r\n\r\nexport const Name = styled.div`\r\n  text-transform: capitalize;\r\n  margin-top: 15px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  h2 {\r\n    font-size: 18px;\r\n    font-weight: 500;\r\n    color: #fff;\r\n  }\r\n  div {\r\n    margin-left: 10px;\r\n    text-align: right;\r\n    margin-right: 0;\r\n    margin-top: 7px;\r\n  }\r\n`;\r\n\r\n\r\n\r\nexport const Id = styled.div`\r\n  font-size: 16px;\r\n  color: rgba(255, 255, 255, 0.8);\r\n  font-weight: 600;\r\n  z-index: 2;\r\n  letter-spacing: 0.25px;\r\n`;\r\n\r\nexport const Info = styled.div`\r\n  border-radius: 15px;\r\n  background: rgba(255, 255, 255, 0.25);\r\n  font-size: 14px;\r\n  color: #fff;\r\n  padding: 2px 6px 3px 6px;\r\n  display: inline-flex;\r\n  margin-right: 10px;\r\n  margin-top: 3px;\r\n`;\r\nexport const BasicInfo = styled.div`\r\n  border-radius: 15px;\r\n  font-size: 12px;\r\n  color: #fff;\r\n  display: inline-flex;\r\n  margin-right: 5px;\r\n  margin-top: 3px;\r\n  align-items: center;\r\n  b {\r\n    font-weight: 600;\r\n    margin-right: 2px;\r\n    font-size: 10px;\r\n  }\r\n`;\r\n\r\nexport const Stat = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 5px;\r\n`;\r\nexport const StatLabel = styled.div`\r\n  color: #fff;\r\n  font-weight: 600;\r\n  font-size: 12px;\r\n  margin-bottom: 2px;\r\n  text-transform: capitalize;\r\n`;\r\nexport const StatBar = styled.div`\r\n  width: 100%;\r\n  height: 4px;\r\n  background: #ccc;\r\n  border-radius: 5px;\r\n  position: relative;\r\n  &::before {\r\n    content: ' ';\r\n    background: #999;\r\n    height: 4px;\r\n    width: ${props => (props.base_stat ? (props.base_stat * 100) / 500 : 0)}%;\r\n    position: absolute;\r\n    border-radius: 5px;\r\n  }\r\n  &::after {\r\n    content: ' ${props => props.title}/500';\r\n    position: absolute;\r\n    right: 0;\r\n    top: -15px;\r\n    color: #fff;\r\n    font-size: 11px;\r\n  }\r\n`;\r\n","import React, {useState,useEffect} from 'react'\r\n\r\nimport {\r\n    Container,\r\n    Card,\r\n    List,\r\n    Name,\r\n    Head,\r\n    Row,\r\n    Col,\r\n    SubCard,\r\n    Id,\r\n    Info,\r\n    SubTitle,\r\n    Evolutions,\r\n    Evolution,\r\n    Colors,\r\n    Color,\r\n    Select,\r\n    Option,\r\n    BoxTypes,\r\n    BasicInfo,\r\n    ButtonTop,\r\n    Stat,\r\n    StatLabel,\r\n    StatBar,\r\n  } from '../styles';\r\n\r\nconst pad = (num, size) => {\r\n    const s = `000${num}`;\r\n    return s.substr(s.length - size);\r\n  };\r\n\r\n\r\n  function PokemonInfo({pokemon}){\r\n   \r\n    var totalStats=0\r\n    return (\r\n        <Card\r\n                key={`pokemon-${pokemon.name}`}\r\n                id={`pokemon-${pokemon.name}`}\r\n              >\r\n                <img src={pokemon.sprites.front_default} alt=\"daa\"\r\n                        style={{\r\n                            'width': '350px',\r\n                            'margin': '0 auto',\r\n                            'z-index':'2',\r\n                            'margin-top': '-70px'                    \r\n                        }}\r\n                     ></img>\r\n       \r\n                <SubCard className={`bg-dark`}>\r\n                  <Id>#{pad(pokemon.id, 3)}</Id>\r\n                  <BoxTypes>\r\n                    {pokemon.types.map(item => (\r\n                      <Info key={item.type.name}>{item.type.name}</Info>\r\n                    ))}\r\n                  </BoxTypes>\r\n                  <Name>\r\n                    <h2>{pokemon.name}</h2>\r\n                    {pokemon.habitat && (\r\n                      <BasicInfo>\r\n                        <b>Habitat:</b>\r\n                        {pokemon.habitat}\r\n                      </BasicInfo>\r\n                    )}\r\n                  </Name>\r\n\r\n                  <BasicInfo>\r\n                    <b>Weight:</b>\r\n                    {pokemon.weight}\r\n                  </BasicInfo>\r\n                  <BasicInfo>\r\n                    <b>Height:</b>\r\n                    {pokemon.height}\r\n                  </BasicInfo>\r\n\r\n                  {pokemon.stats\r\n                    .filter(\r\n                      o =>\r\n                        o.stat.name !== 'special-defense' &&\r\n                        o.stat.name !== 'special-attack'\r\n                    )\r\n                    .map(s => {\r\n                      totalStats += s.base_stat;\r\n                      return (\r\n                        <Stat key={s.stat.name}>\r\n                          <StatLabel>{s.stat.name}</StatLabel>\r\n                          <StatBar\r\n                            base_stat={s.base_stat}\r\n                            title={s.base_stat}\r\n                          />\r\n                        </Stat>\r\n                      );\r\n                    })}\r\n\r\n                  <Stat>\r\n                    <StatLabel>Total</StatLabel>\r\n                    <StatBar base_stat={totalStats} title={totalStats} />\r\n                  </Stat>\r\n\r\n                 \r\n                </SubCard>\r\n                \r\n              </Card>\r\n    )\r\n}\r\n\r\nexport default PokemonInfo;","//Remove specific string and uppercase the result\r\nexport const removeAndUpper = (str_remove,str)=> {\r\n    str = str.replace(str_remove,\"\")\r\n    return str.toUpperCase();\r\n  }\r\n//Set the fisrt character to upperCase\r\nexport   const firstToUpper = (str) => str[0].toUpperCase()+str.substring(1,str.length)\r\n\r\nexport const splitAndUpper=(str,split_symbol=\" \")=>{\r\n  var str = str.split(split_symbol);\r\n  var res=\"\"\r\n  str.forEach((item)=>{\r\n    res += firstToUpper(item) +\" \"\r\n    \r\n  })\r\n\r\n  return res.trim();\r\n}\r\n","import React from 'react';\r\nimport {Card, CardContent,CardHeader, Chip,Typography } from '@material-ui/core';\r\nimport {Map,ZoomOutMap,Timeline} from '@material-ui/icons'\r\nimport {removeAndUpper,firstToUpper,splitAndUpper} from '../../utils/stringtools'\r\n\r\nfunction LocationInfo({location}) {\r\n\r\n  const {id,name,region,areas,game_indices} = location\r\n  //English name\r\n  \r\n  //Generation\r\n  const {generation} = game_indices[0]\r\n\r\n\r\n\r\n  return (\r\n   \r\n    <Card className=\"card-info-noimage\" variant=\"outlined\">\r\n\r\n      <CardHeader className=\"card-info-header\"\r\n        title={splitAndUpper(name,'-')} //Get location name in english\r\n        subheader={\"#\"+id}\r\n      />\r\n      <CardContent>\r\n\r\n      <Typography className=\"card-info-subtitles\" color=\"textSecondary\" gutterBottom>\r\n        Region:\r\n      </Typography>\r\n\r\n      <Chip icon={<Map/>}\r\n        label = {firstToUpper(region.name)} //Region name\r\n        color={\"primary\"} \r\n        />\r\n\r\n      <Typography className=\"card-info-subtitles\"color=\"textSecondary\">\r\n        Areas:\r\n      </Typography>\r\n      {\r\n        areas.map((area)=>{\r\n          return (\r\n            <Chip icon={<ZoomOutMap/>}\r\n            label = {firstToUpper(area.name)} //Areas\r\n            color={\"secondary\"} />\r\n          )\r\n        })\r\n      }\r\n\r\n        <Typography className=\"card-info-subtitles\" color=\"textSecondary\">\r\n        Generation:\r\n      </Typography>\r\n\r\n      <Chip icon={<Timeline/>}\r\n        label = {removeAndUpper('generation-',generation.name)} //Generation\r\n        color={\"default\"} />\r\n       \r\n\r\n        \r\n      </CardContent>\r\n\r\n    </Card>\r\n    \r\n  );\r\n}\r\n\r\nexport default LocationInfo","import React from 'react'\r\nimport {splitAndUpper} from '../../utils/stringtools'\r\nimport './ScrollableList.css'\r\nimport {List,ListItem,ListItemText } from '@material-ui/core';\r\n\r\n\r\nfunction ScrollableList({data,listName})\r\n{\r\n  \r\n    return (  <div className=\"list-body\">\r\n        {\r\n          (data.length>0)?\r\n            <List  subheader={<li />}>\r\n                  {data.map((item, idx) => (\r\n                    <ListItem key={idx}>\r\n                      <ListItemText style={{textAlign:'center'}} primary={splitAndUpper(item.name,'-')} />\r\n                    </ListItem>\r\n                  ))}\r\n            </List>\r\n              :\r\n              <p1>No {listName}</p1>\r\n        }\r\n        </div>)\r\n}\r\n\r\nexport default ScrollableList","import React from 'react';\r\nimport {Card, CardContent,CardHeader, Chip,Typography , Divider } from '@material-ui/core';\r\nimport {splitAndUpper,firstToUpper} from '../../utils/stringtools'\r\nimport PlaceIcon from '@material-ui/icons/Place';\r\n\r\nimport ScrollableList from '../ScrollableList/ScrollableList';\r\n\r\n\r\nfunction GenerationInfo({generation}) {\r\n\r\n \r\n  const {id,abilities,name,main_region,moves,pokemon_species,types,version_groups} = generation\r\n\r\n  return (\r\n   \r\n    <Card className=\"card-info-noimage\" variant=\"outlined\">\r\n\r\n      <CardHeader className=\"card-info-header\"\r\n        title={splitAndUpper(name,'-')} //Get generation name in english\r\n        subheader={\"#\"+id}\r\n      />\r\n      <div className=\"center-item\" >\r\n        <Chip \r\n                  label={firstToUpper(main_region.name)+\" Region\"}\r\n                  color={\"secondary\"}\r\n                  icon = {<PlaceIcon/>}\r\n                />\r\n      </div>\r\n    \r\n      <CardContent>\r\n        \r\n        <div className=\"fixed-list\">\r\n            <div className=\"col\">\r\n              <Typography className=\"card-info-subtitles\"color=\"textSecondary\">\r\n                Moves:\r\n              </Typography>\r\n              <br></br>\r\n              <ScrollableList data={moves} listName=\"Moves\"/>\r\n            </div>\r\n            <Divider orientation=\"vertical\" flexItem />\r\n            \r\n            <div className=\"col\">\r\n\r\n            <Typography className=\"card-info-subtitles\"color=\"textSecondary\">\r\n              Abilities:\r\n            </Typography>\r\n            <br></br>\r\n            <ScrollableList data={abilities} listName=\"Abilities\"/>\r\n            </div>\r\n            <Divider orientation=\"vertical\" flexItem />\r\n\r\n\r\n            <div className=\"col\">\r\n\r\n              <Typography className=\"card-info-subtitles\"color=\"textSecondary\">\r\n                Pokemon Species:\r\n              </Typography>\r\n\r\n              <br></br>\r\n\r\n              <ScrollableList data={pokemon_species} listName=\"Pokemon Species\"/>\r\n\r\n            </div>\r\n            <Divider orientation=\"vertical\" flexItem />\r\n\r\n            <div className=\"col\">\r\n\r\n              <Typography className=\"card-info-subtitles\"color=\"textSecondary\">\r\n                Types:\r\n              </Typography>\r\n\r\n              <br></br>\r\n\r\n              <ScrollableList data={types} listName=\"Types\"/>\r\n\r\n            </div>\r\n            <Divider orientation=\"vertical\" flexItem />\r\n            <div className=\"col\">\r\n\r\n              <Typography className=\"card-info-subtitles\"color=\"textSecondary\">\r\n                Version Groups:\r\n              </Typography>\r\n\r\n              <br></br>\r\n\r\n              <ScrollableList data={version_groups} listName=\"Version Groups\"/>\r\n\r\n            </div>\r\n\r\n         </div>\r\n\r\n      </CardContent>\r\n\r\n    </Card>\r\n    \r\n  );\r\n}\r\n\r\nexport default GenerationInfo","import React from 'react'\r\nimport './Modal.css'\r\nimport PokemonInfo from '../Pokedex/PokemonInfo'\r\nimport LocationInfo from '../Locations/Location.card.info'\r\nimport GenerationInfo from '../Generations/Generation.card.info'\r\n\r\nfunction Modal ({module,data,closeModal}){\r\n  \r\n    const preventClose= (e) => e.stopPropagation();\r\n       \r\n    return (\r\n        <div className='modal-bg modal-open'  onClick={closeModal}>\r\n            <div onClick={preventClose}>\r\n            {(!module.localeCompare('pokemon')) ? <PokemonInfo pokemon={data}/>\r\n            :(!module.localeCompare('location')) ?<LocationInfo location={data}/>\r\n            :<GenerationInfo generation={data}/>\r\n            } \r\n            </div>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Modal","import React  from 'react'\r\nimport Chip from '@material-ui/core/Chip';\r\nimport PlaceIcon from '@material-ui/icons/Place';\r\nimport {firstToUpper, splitAndUpper} from '../../utils/stringtools'\r\n\r\nfunction GenerationCard({generation,openModal,setSelectedGeneration}) {\r\n \r\n  //Data\r\n  const {id,name,main_region} = generation  \r\n  \r\n  const onClickHandler = ()=>{\r\n      openModal();\r\n      setSelectedGeneration(generation);\r\n    }\r\n\r\n    return ( \r\n      <div  className=\"pokemon-card active-pointer\" onClick={onClickHandler}>\r\n\r\n        <div className=\"card-body\">\r\n\r\n          <div className=\"card-top\">\r\n\r\n            <h3>{splitAndUpper(name,'-')}</h3>\r\n\r\n            <div>\r\n              #{id}\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <div className=\"pokemon-type\">\r\n\r\n                <Chip\r\n                  label={firstToUpper(main_region.name)}\r\n                  color={\"secondary\"}\r\n                  icon = {<PlaceIcon/>}\r\n                />\r\n          \r\n          </div>\r\n\r\n        </div>\r\n\r\n\r\n    </div>\r\n    )\r\n    }\r\n\r\nexport default GenerationCard;","import React from 'react'\r\nimport GenerationCard from './Generation.card';\r\n\r\nfunction GenerationCards ({generations,openModal,setSelectedGeneration})\r\n{\r\n    return (\r\n        <div className=\"container pokedex-grid\"  >\r\n            {\r\n            generations.map((generation)=>(\r\n                    <GenerationCard \r\n                        key={generation.id}\r\n                        generation={generation}\r\n                        openModal={openModal}\r\n                        setSelectedGeneration={setSelectedGeneration}\r\n                    />                \r\n            ))\r\n        }\r\n       \r\n    </div>)\r\n}\r\n\r\nexport default GenerationCards;","import React from 'react'\r\nimport './Pagination.css'\r\nimport Pagination_ from '@material-ui/lab/Pagination';\r\n\r\nfunction  Pagination({updatePage,totalPages})\r\n{\r\n    return (<div className=\"container \">\r\n        \r\n        <div className=\"pagination\">\r\n        <Pagination_  count={totalPages} onChange={updatePage} size=\"large\" />\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default Pagination;","//Api config\r\nconst BASE_URL='https://pokeapi.co/api/v2/'\r\n\r\n//Methods\r\nexport const searchItem  = async (MODULE,item_name) =>{\r\n       \r\n        var URL=`${BASE_URL+MODULE}/${item_name}`;\r\n\r\n        return await fetchItem(URL);\r\n}\r\n\r\nexport const getItems  = async (MODULE ,limit = 10, offset = 0) =>{\r\n        \r\n        var URL=`${BASE_URL+MODULE}?limit=${limit}&offset=${offset}`;\r\n    \r\n        return await fetchItem(URL)\r\n}\r\n\r\nexport const getItemByURL  = async ( URL ) => await fetchItem(URL);\r\n\r\n\r\nconst fetchItem = async(URL)=>{\r\n    try\r\n    {\r\n        //Item request\r\n        const res = await fetch( URL );\r\n        //Settle data\r\n        const data = await res.json();\r\n\r\n       return data;\r\n    }\r\n    catch (err)\r\n    {\r\n        console.log(err)\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nfunction Title({img}){\r\n    return(\r\n        <div className=\"text-center  text-light\" >\r\n        <img src={img} className=\"title-flex\" alt=\"\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Title;\r\n","import React, {useState} from 'react'\r\nimport {TextField,IconButton} from '@material-ui/core'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nfunction SearchBar({module,onSearch}){\r\n    const [search,setSearch] = useState('');\r\n\r\n    const onChangeInput = (e) =>{\r\n        e.preventDefault();\r\n        setSearch(e.target.value);\r\n    }\r\n\r\n    const onClickSearch = ()=> {\r\n      \r\n        onSearch(search.toLowerCase())\r\n    }\r\n\r\n    const onPressEnter = (e) =>{\r\n\r\n        var keyCode = e.code || e.key;\r\n        if (keyCode == 'Enter')\r\n        {\r\n          // Enter pressed\r\n          e.preventDefault();\r\n          onSearch(search.toLowerCase())\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"text-center  container c-searchbar \">\r\n            <div className=\"col-10 \">\r\n                <form noValidate autoComplete=\"off\">\r\n                    <TextField id=\"filled-basic\" fullWidth={true} label={`Search ${module} by name`} variant=\"filled\" \r\n                       onKeyPress={onPressEnter} onChange={onChangeInput}/>\r\n                </form>\r\n            </div>\r\n            <div className=\"col-2\">\r\n            <IconButton color=\"primary\" aria-label=\"Search Pokemon\" onKeyPress={onPressEnter} onClick={onClickSearch}>\r\n          <SearchIcon fontSize=\"large\" />\r\n        </IconButton>\r\n            </div>\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar;\r\n","export default __webpack_public_path__ + \"static/media/generations.35948d86.png\";","import React, {useState, useEffect} from 'react'\r\nimport Modal from '../Modal/Modal'\r\nimport GenerationCards from './Generation.cards'\r\nimport Pagination from '../Pagination/Pagination'\r\nimport {getItemByURL,getItems,searchItem } from '../../services/api.services'\r\nimport Title from '../Title'\r\nimport SearchBar from '../SearchBar'\r\nimport img_title from '../../assets/generations.png'\r\n\r\nfunction Generations ()  {\r\n    \r\n    //Config\r\n    const NUM_ITEMS=10\r\n    const MODULE='generation'\r\n    //Data\r\n    const [generations,setGenerations] = useState([])\r\n    const [selected_generation,setSelectedGeneration]= useState(null)\r\n    \r\n    //Pages\r\n    const [actualPage,setActualPage]= useState(0)\r\n    const [totalPages,setTotalPages]= useState()\r\n    \r\n    //Hide/Show Components\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [notFound,setNotFound] = useState(false);\r\n\r\n    const fetchGeneration = async() => {\r\n        try\r\n        {\r\n            //Get generations data\r\n            const data = await getItems(MODULE,\r\n                                        NUM_ITEMS, //Limit\r\n                                        NUM_ITEMS*actualPage); //Offset\r\n            console.log(data)\r\n            //Get specific data of each generation\r\n            const promises = data.results.map( async (pok)=>{\r\n                    return await getItemByURL(pok.url)\r\n                })\r\n        //Await until get all promises\r\n            const results = await Promise.all(promises)\r\n            //Set Data\r\n\r\n            setTotalPages( Math.ceil(data.count/NUM_ITEMS))\r\n            setGenerations(results)\r\n            setNotFound(false);\r\n        }\r\n        catch(err)\r\n        {\r\n\r\n        }\r\n    }\r\n\r\n\r\n    const onSearch = async(generation_name)=>{\r\n\r\n        if(!generation_name)\r\n            return fetchGeneration();\r\n\r\n        const res = await searchItem(MODULE,generation_name)\r\n        if(res)\r\n        {\r\n            setGenerations([res])\r\n            setNotFound(false)\r\n        }\r\n        else\r\n            setNotFound(true)\r\n       \r\n    }\r\n\r\n    \r\n    const onPreviousPage = ()=>{\r\n        if (actualPage > 0)\r\n            setActualPage(actualPage-1)\r\n    } \r\n    \r\n    const onNextPage = ()=> \r\n    {\r\n        if (actualPage < (totalPages-1))\r\n            setActualPage(actualPage+1)\r\n    }\r\n        \r\n    const handleCloseModal = () => setShowModal(false);\r\n    const handleShowModal = () => setShowModal(true);\r\n    const onSelectGenerationHandler = (generation)=>  setSelectedGeneration(generation)     \r\n    const updatePage= (e,page_)=>  setActualPage(page_-1)\r\n       \r\n    \r\n    \r\n    useEffect(()=>{\r\n        fetchGeneration()\r\n    },[actualPage])\r\n\r\n    return (\r\n        <div >\r\n           <br></br>\r\n            <Title img={img_title}/>\r\n             <br></br>\r\n             <SearchBar  module={MODULE} onSearch={onSearch} />\r\n              <br></br>\r\n\r\n            {(!notFound)?\r\n            <div >\r\n                <GenerationCards\r\n                    generations={generations}\r\n                    openModal={handleShowModal}\r\n                    setSelectedGeneration={onSelectGenerationHandler}\r\n                    />\r\n                    </div>\r\n                :\r\n                <p>Pokemon Not Found</p>   \r\n            }\r\n              <br></br>\r\n              <Pagination\r\n                totalPages={totalPages}\r\n                updatePage={updatePage}   \r\n            />\r\n              <br></br>\r\n              <br></br>\r\n            {\r\n                showModal && selected_generation &&  \r\n                    <Modal \r\n                    module={MODULE}\r\n                    data={selected_generation}\r\n                    closeModal ={handleCloseModal}\r\n                    />\r\n                }      \r\n        </div>)\r\n}\r\n\r\nexport default Generations;","import React  from 'react'\r\nimport Chip from '@material-ui/core/Chip';\r\nimport PlaceIcon from '@material-ui/icons/Place';\r\nimport {firstToUpper, splitAndUpper} from '../../utils/stringtools'\r\n\r\nfunction LocationCard({location,openModal,setSelectedLocation}) {\r\n \r\n  //Data\r\n  const {id,name,region} = location  \r\n  \r\n  const onClickHandler = ()=>{\r\n      openModal();\r\n      setSelectedLocation(location);\r\n    }\r\n\r\n    return ( \r\n      <div  className=\"pokemon-card active-pointer\" onClick={onClickHandler}>\r\n\r\n        <div className=\"card-body\">\r\n\r\n          <div className=\"card-top\">\r\n\r\n            <h3>{splitAndUpper(name,'-')}</h3>\r\n\r\n            <div>\r\n              #{id}\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <div className=\"pokemon-type\">\r\n\r\n                <Chip\r\n                  label={firstToUpper(region.name)}\r\n                  color={\"secondary\"}\r\n                  icon = {<PlaceIcon/>}\r\n                />\r\n          \r\n          </div>\r\n\r\n        </div>\r\n\r\n\r\n    </div>\r\n    )\r\n    }\r\n\r\nexport default LocationCard;","import React from 'react'\r\nimport LocationCard from './Location.card';\r\n\r\nfunction LocationCards ({locations,openModal,setSelectedLocation})\r\n\r\n{\r\n    return (\r\n        <div className=\"container pokedex-grid\"  >\r\n            {\r\n            locations.map((location)=>(\r\n                    <LocationCard \r\n                        key={location.id}\r\n                        location={location}\r\n                        openModal={openModal}\r\n                        setSelectedLocation={setSelectedLocation}\r\n                    />                \r\n            ))\r\n        }\r\n       \r\n    </div>)\r\n}\r\n\r\nexport default LocationCards;","export default __webpack_public_path__ + \"static/media/title_locations.b8070092.png\";","import React, {useState, useEffect} from 'react'\r\nimport Modal from '../Modal/Modal'\r\nimport LocationCards from './Location.cards'\r\nimport Pagination from '../Pagination/Pagination'\r\nimport {getItemByURL,getItems,searchItem } from '../../services/api.services'\r\nimport Title from '../Title'\r\nimport SearchBar from '../SearchBar'\r\nimport img_title from '../../assets/title_locations.png'\r\n\r\nfunction Locations ()  {\r\n    \r\n    //Config\r\n    const NUM_ITEMS=10\r\n    const MODULE='location'\r\n    //Data\r\n    const [locations,setLocations] = useState([])\r\n    const [selected_location,setSelectedLocation]= useState(null)\r\n    \r\n    //Pages\r\n    const [actualPage,setActualPage]= useState(0)\r\n    const [totalPages,setTotalPages]= useState()\r\n    \r\n    //Hide/Show Components\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [notFound,setNotFound] = useState(false);\r\n\r\n    const fetchLocation = async() => {\r\n        try\r\n        {\r\n            //Get locations data\r\n            const data = await getItems(MODULE,\r\n                                        NUM_ITEMS, //Limit\r\n                                        NUM_ITEMS*actualPage); //Offset\r\n            console.log(data)\r\n            //Get specific data of each location\r\n            const promises = data.results.map( async (pok)=>{\r\n                    return await getItemByURL(pok.url)\r\n                })\r\n        //Await until get all promises\r\n            const results = await Promise.all(promises)\r\n            //Set Data\r\n\r\n            setTotalPages( Math.ceil(data.count/NUM_ITEMS))\r\n            setLocations(results)\r\n            setNotFound(false);\r\n        }\r\n        catch(err)\r\n        {\r\n\r\n        }\r\n    }\r\n\r\n    const updatePage= (e,page_)=>{\r\n        setActualPage(page_-1)\r\n    }\r\n\r\n    const onSearch = async(location_name)=>{\r\n\r\n        if(!location_name)\r\n            return fetchLocation();\r\n\r\n        const res = await searchItem(MODULE,location_name)\r\n        if(res)\r\n        {\r\n            setLocations([res])\r\n            setNotFound(false)\r\n        }\r\n        else\r\n            setNotFound(true)\r\n       \r\n    }\r\n\r\n    \r\n    const onPreviousPage = ()=>{\r\n        if (actualPage > 0)\r\n            setActualPage(actualPage-1)\r\n    } \r\n    \r\n    const onNextPage = ()=>  setActualPage(actualPage+1)\r\n    const handleCloseModal = () => setShowModal(false);\r\n    const handleShowModal = () => setShowModal(true);\r\n    const onSelectLocationHandler = (location)=>  setSelectedLocation(location)     \r\n       \r\n    \r\n    useEffect(()=>{\r\n        fetchLocation()\r\n    },[actualPage])\r\n\r\n    return (\r\n        <div >\r\n           <br></br>\r\n            <Title img={img_title}/>\r\n             <br></br>\r\n             <SearchBar  module={MODULE} onSearch={onSearch} />\r\n              <br></br>\r\n\r\n            {(!notFound)?\r\n            <div >\r\n                <LocationCards\r\n                    locations={locations}\r\n                    openModal={handleShowModal}\r\n                    setSelectedLocation={onSelectLocationHandler}\r\n                    />\r\n                    </div>\r\n                :\r\n                <p>Pokemon Not Found</p>   \r\n            }\r\n            \r\n              <Pagination\r\n                totalPages={totalPages}\r\n                updatePage={updatePage}   \r\n            />\r\n              <br></br>\r\n              <br></br>\r\n            {\r\n                showModal && selected_location &&  \r\n                    <Modal \r\n                    module={MODULE}\r\n                    data={selected_location}\r\n                    closeModal ={handleCloseModal}\r\n                    />\r\n                }      \r\n        </div>)\r\n}\r\n\r\nexport default Locations;","import React ,{useEffect,useState} from 'react'\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport GradeIcon from '@material-ui/icons/Grade';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  content: {\r\n    flex: '1 0 auto',\r\n  },\r\n  media: {\r\n    width: 151,\r\n  },\r\n}));\r\n  \r\n\r\nfunction PokemonCard({pokemon,openModal,setSelectedPokemon}) {\r\n \r\n\r\n \r\n    const classes = useStyles();\r\n\r\n    const setTypeMessage = ()=>{\r\n      \r\n      var typesNames=pokemon.types.map((item)=>{\r\n        return item.type.name\r\n      })\r\n \r\n      if (typesNames.length>0 )\r\n      {\r\n        if (typesNames.length==1)\r\n          return typesNames[0]\r\n        return typesNames[0]+\" | \"+typesNames[1]\r\n      }\r\n      return \"No Type\"\r\n    }\r\n\r\n    const onClickHandler = ()=>{\r\n      openModal();\r\n      setSelectedPokemon(pokemon);\r\n    }\r\n\r\n    return ( \r\n      <div  style={{cursor: 'pointer'}} className=\"pokemon-card \" onClick={onClickHandler}>\r\n        <div className=\"pokemon-img-container\">\r\n          <img src ={pokemon.sprites.front_default}\r\n              alt = {pokemon.name}\r\n              className=\"pokemon-img\"/>\r\n\r\n\r\n        </div>\r\n\r\n        <div className=\"card-body\">\r\n          <div className=\"card-top\">\r\n            <h3>{pokemon.name}</h3>\r\n            <div>\r\n              # {pokemon.id}\r\n            </div>\r\n          </div>\r\n          <div className=\"pokemon-type\">\r\n            {\r\n              pokemon.types.map((item,idx)=>{\r\n\r\n                return         <Chip key={idx}\r\n                label={item.type.name[0].toUpperCase()+item.type.name.substring(1,item.type.name.length)}\r\n                color={\"secondary\"}\r\n                icon = {<GradeIcon/>}\r\n            />\r\n                })\r\n            }\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n \r\n)\r\n}\r\n\r\nexport default PokemonCard;","import { types } from '@babel/core';\r\nimport React from 'react'\r\n\r\nimport PokemonCard from './PokemonCard';\r\nimport {Grid} from '@material-ui/core'\r\n\r\nfunction PokemonCards ({pokemons,openModal,setSelectedPokemon})\r\n{\r\n\r\n    return (\r\n                <div className=\"container pokedex-grid\"  >\r\n\r\n        {\r\n            pokemons.map((pokemon)=>(\r\n               \r\n                    <PokemonCard\r\n                        key={pokemon.id}\r\n                        pokemon={pokemon}\r\n                        openModal={openModal}\r\n                        setSelectedPokemon={setSelectedPokemon}\r\n                    />\r\n                    \r\n                   \r\n                \r\n            ))\r\n        }\r\n        </div>\r\n   )\r\n}\r\n\r\nexport default PokemonCards;","export default __webpack_public_path__ + \"static/media/pokedex.9383ae43.png\";","import React, {useState, useEffect} from 'react'\r\nimport Modal from '../Modal/Modal'\r\nimport PokemonCards from './PokemonCards'\r\nimport Pagination from '../Pagination/Pagination'\r\nimport {getItemByURL,getItems,searchItem } from '../../services/api.services'\r\nimport Title from '../Title'\r\nimport SearchBar from '../SearchBar'\r\nimport img_title from '../../assets/pokedex.png'\r\n\r\n\r\n\r\nfunction Pokedex(){\r\n\r\n    //Config\r\n    const NUM_ITEMS=10\r\n    const MODULE='pokemon'\r\n\r\n    const [show, setShow] = useState(false);\r\n    \r\n    const [pokemons,setPokemons] = useState([])\r\n    const [selected_pokemon,setSelectedPokemon]= useState(null)\r\n    const [actualPage,setActualPage]= useState(0)\r\n    const [totalPages,setTotalPages]= useState()\r\n    \r\n    const [notFound,setNotFound] = useState(false);\r\n\r\n    const onSearch = async(pokemon_name)=>{\r\n\r\n        if(!pokemon_name)\r\n            return fetchPokemon();\r\n\r\n        const res = await searchItem(MODULE,pokemon_name)\r\n        if(res)\r\n        {\r\n            setPokemons([res])\r\n            setNotFound(false)\r\n        }\r\n        else\r\n            setNotFound(true)\r\n       \r\n    }\r\n\r\n    const onNextPage = ()=>{\r\n        setActualPage(actualPage+1)\r\n    } \r\n    \r\n    const onPreviousPage = ()=>{\r\n        if (actualPage > 0)\r\n            setActualPage(actualPage-1)\r\n    } \r\n    const onSelectPokemonHandler = (pokemon)=> {\r\n        setSelectedPokemon(pokemon)     \r\n    }\r\n\r\n    const fetchPokemon = async() => {\r\n        try\r\n        {\r\n            //Get pokemons data\r\n            const data = await getItems(MODULE,NUM_ITEMS, NUM_ITEMS*actualPage);\r\n            //Get specific data of each pokemon\r\n            const promises = data.results.map( async (pok)=>{\r\n                return await getItemByURL(pok.url)\r\n            })\r\n            //Await until get all promises\r\n            const results = await Promise.all(promises)\r\n            //Set Data\r\n            \r\n      \r\n            setTotalPages( Math.ceil(data.count/NUM_ITEMS))\r\n            setPokemons(results)\r\n            setNotFound(false);\r\n        }\r\n        catch(err)\r\n        {\r\n\r\n        }\r\n    }\r\n    const updatePage= (e,page_)=>{\r\n        setActualPage(page_-1)\r\n    }\r\n    const handleCloseModal = () => setShow(false);\r\n    const handleShowModal = () => setShow(true);\r\n\r\n    useEffect(()=>{\r\n        fetchPokemon()\r\n    },[actualPage])\r\n\r\n    return (\r\n        <div>     \r\n            <br></br>\r\n            <Title img={img_title}/>\r\n             <br></br>\r\n            <SearchBar  module={MODULE} onSearch={onSearch} />\r\n          \r\n            <br></br>\r\n            {(!notFound)?\r\n                <PokemonCards\r\n                    pokemons={pokemons}\r\n                    openModal={handleShowModal}\r\n                    setSelectedPokemon={onSelectPokemonHandler}\r\n                    />\r\n                :\r\n                <p>Pokemon Not Found</p>   \r\n            }\r\n              \r\n            <Pagination\r\n                totalPages={totalPages}\r\n                updatePage={updatePage}   \r\n            />\r\n            <br></br>\r\n            <br></br>\r\n            {/*Modal with pokemon info*/ }\r\n            {\r\n                show && selected_pokemon &&  \r\n                <Modal \r\n                        module={MODULE}\r\n                        data={selected_pokemon}\r\n                        closeModal ={handleCloseModal}\r\n                />\r\n            }  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pokedex;","import React from \"react\";\r\nimport './Footer.css'\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport { Icon, IconButton,Divider } from \"@material-ui/core\";\r\nimport bar_logo from '../../assets/pokeball.png'\r\n\r\nconst Footer = () => (\r\n  <footer>\r\n   \r\n  \r\n    <div>\r\n      Created by David Torres  | \r\n      <a href=\"https://github.com/deivid-01/PokemonWorld\"> Source code</a>\r\n\r\n    </div>\r\n    \r\n    \r\n      <div>\r\n      Contact: datcx@hotmail.com\r\n      </div>\r\n    <div>\r\n     \r\n      <IconButton href=\"https://github.com/deivid-01\" style={{color:'rgb(255,255,255)'}} target=\"_blank\" >\r\n      <GitHubIcon  color=\"interit\"/>\r\n    </IconButton>\r\n    <IconButton href=\"https://www.linkedin.com/in/david-torres-81075b182/\" style={{color:'rgb(255,255,255)'}}  target=\"_blank\">\r\n      <LinkedInIcon/>\r\n    </IconButton>\r\n    </div>\r\n \r\n  \r\n   \r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n","export default __webpack_public_path__ + \"static/media/pokeball.774abbaf.png\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {AppBar,Toolbar,Typography,Button} from '@material-ui/core';\r\nimport {useHistory} from 'react-router-dom'\r\nimport './NavBar.css'\r\nimport bar_logo from '../../assets/pokemonworld.png'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: { flexGrow: 10,},\r\n}));\r\n\r\nfunction NavBar() {\r\n\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const PATH_HOME='/home';\r\n  const PATH_POKEDEX='/pokedex';\r\n  const PATH_LOCATIONS='/locations';\r\n  const PATH_GENERATIONS='/generations';\r\n\r\n  const onChangesTab = (page,e)=>{\r\n     \r\n    history.push(page)\r\n  }\r\n\r\n  return (\r\n  \r\n      <AppBar \r\n      style={{\r\n        background:'rgba(0,0,0,0.25)',\r\n        flexGrow: 1\r\n      }}\r\n      position=\"static\">\r\n        <Toolbar>\r\n          <div className=\"col\">\r\n            <Button onClick={onChangesTab.bind(this,PATH_HOME)} color=\"inherit\" >\r\n                <img src={bar_logo} className=\"bar-logo\"/>\r\n              </Button>\r\n          </div>\r\n          <div >\r\n            <Button onClick={onChangesTab.bind(this,PATH_HOME)} color=\"inherit\">\r\n              <Typography variant=\"h6\" >\r\n                Home\r\n              </Typography>\r\n              </Button>\r\n              <Button onClick={onChangesTab.bind(this,PATH_POKEDEX)} color=\"inherit\">\r\n              <Typography variant=\"h6\" className={classes.title}>\r\n                Pokedex\r\n              </Typography>\r\n              </Button>\r\n              <Button onClick={onChangesTab.bind(this,PATH_LOCATIONS)} color=\"inherit\">\r\n              <Typography variant=\"h6\" className={classes.title}>\r\n                Locations\r\n              </Typography>\r\n              </Button>\r\n              <Button onClick={onChangesTab.bind(this,PATH_GENERATIONS)} color=\"inherit\">\r\n              <Typography variant=\"h6\" className={classes.title}>\r\n                Generations\r\n              </Typography>\r\n              </Button>\r\n            </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n  \r\n  );\r\n}\r\n\r\nexport default NavBar;","import Home from './components/Home/Home'\r\nimport Generations from './components/Generations/Generations'\r\nimport Locations from './components/Locations/Locations'\r\nimport Pokedex from './components/Pokedex/Pokedex'\r\nimport Footer from './components/Footer/Footer'\r\nimport NavBar from './components/NavBar/NavBar'\r\nimport {BrowserRouter,Switch,Route,Redirect} from 'react-router-dom';\r\nimport './App.css'\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n  \r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Redirect exact path=\"/\" to=\"/home\" />\r\n        <Route path=\"/home\" render={ (props) => \r\n              <div>\r\n              <NavBar></NavBar>\r\n                <Home { ...props } />\r\n                <br></br>\r\n                <Footer/> \r\n                </div> \r\n              }\r\n        />\r\n        <Route path=\"/generations\" render={ (props) => \r\n                <div>\r\n              <NavBar></NavBar>\r\n                <Generations { ...props } />\r\n                <Footer/> \r\n                </div>  \r\n              }\r\n      \r\n        />\r\n        <Route path=\"/pokedex\" render={ (props) => \r\n              <div>\r\n              <NavBar></NavBar>\r\n                <Pokedex { ...props } /> \r\n                <Footer/> \r\n                </div>\r\n              }\r\n      \r\n        />\r\n                <Route path=\"/locations\" render={ (props) => \r\n               <div>\r\n               <NavBar></NavBar>\r\n                <Locations { ...props } /> \r\n                <Footer/>  \r\n                </div>\r\n              }\r\n      \r\n        />\r\n                 \r\n    \r\n        {/* Redirect unhandled routes */}\r\n        <Route>\r\n          <Redirect to=\"/home\" />\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'animate.css/animate.min.css'\r\n\r\nReactDOM.render(\r\n    <App  />\r\n ,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}